# Generated by Django 5.1.6 on 2025-07-30 15:36

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Insumo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Nombre del insumo', max_length=200)),
                ('tipo', models.CharField(choices=[('MAQUINARIA', 'Maquinaria'), ('BALANZA', 'Balanza/Báscula'), ('CONTENEDOR', 'Contenedor/Saco/Bolsa'), ('HERRAMIENTA', 'Herramienta'), ('EQUIPO_MEDICION', 'Equipo de Medición'), ('MATERIAL_EMPAQUE', 'Material de Empaque'), ('EQUIPO_TRANSPORTE', 'Equipo de Transporte'), ('OTRO', 'Otro')], help_text='Tipo de insumo', max_length=50)),
                ('codigo', models.CharField(help_text='Código único del insumo', max_length=50, unique=True)),
                ('descripcion', models.TextField(blank=True, help_text='Descripción detallada del insumo')),
                ('cantidad_disponible', models.DecimalField(decimal_places=2, default=0, help_text='Cantidad disponible en inventario', max_digits=10)),
                ('cantidad_minima', models.DecimalField(decimal_places=2, default=0, help_text='Cantidad mínima requerida (para alertas)', max_digits=10)),
                ('unidad_medida', models.CharField(choices=[('UNIDAD', 'Unidad'), ('KG', 'Kilogramos'), ('LIBRA', 'Libras'), ('METRO', 'Metros'), ('LITRO', 'Litros'), ('SACO', 'Sacos'), ('CAJA', 'Cajas'), ('PAR', 'Par')], default='UNIDAD', help_text='Unidad de medida', max_length=20)),
                ('capacidad_maxima', models.DecimalField(blank=True, decimal_places=2, help_text='Capacidad máxima (para maquinaria/equipos)', max_digits=10, null=True)),
                ('modelo', models.CharField(blank=True, help_text='Modelo del insumo', max_length=100)),
                ('marca', models.CharField(blank=True, help_text='Marca del insumo', max_length=100)),
                ('activo', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_ultima_actualizacion', models.DateTimeField(auto_now=True)),
                ('observaciones', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Insumo',
                'verbose_name_plural': 'Insumos',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Organizacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
                ('tipo', models.CharField(blank=True, help_text='Tipo de organización (Cooperativa, Asociación, etc.)', max_length=50, null=True)),
                ('ruc', models.CharField(blank=True, help_text='RUC de la organización', max_length=13, null=True)),
                ('mail', models.EmailField(blank=True, max_length=100)),
                ('telefono', models.CharField(blank=True, max_length=20)),
                ('provincia', models.CharField(blank=True, help_text='Provincia donde se ubica la organización', max_length=100, null=True)),
                ('canton', models.CharField(blank=True, help_text='Cantón donde se ubica la organización', max_length=100, null=True)),
                ('ciudad', models.CharField(blank=True, help_text='Ciudad donde se ubica la organización', max_length=100, null=True)),
                ('plus_code', models.CharField(blank=True, help_text='Plus Code de Google Maps para ubicación exacta', max_length=50, null=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Organizaciones',
            },
        ),
        migrations.CreateModel(
            name='PropietarioMaestro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_completo', models.CharField(max_length=200)),
                ('cedula', models.CharField(max_length=20, unique=True)),
                ('telefono', models.CharField(blank=True, max_length=20)),
                ('departamento', models.CharField(blank=True, help_text='Provincia', max_length=100)),
                ('municipio', models.CharField(blank=True, help_text='Ciudad', max_length=100)),
                ('comunidad', models.CharField(blank=True, help_text='Barrio/Comunidad', max_length=100)),
                ('calle', models.CharField(blank=True, help_text='Calle/Finca', max_length=200)),
                ('numero_casa', models.CharField(blank=True, help_text='Número de casa', max_length=50)),
                ('referencias', models.CharField(blank=True, help_text='Referencias', max_length=300)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('activo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Propietario Maestro',
                'verbose_name_plural': 'Propietarios Maestros',
                'ordering': ['nombre_completo'],
            },
        ),
        migrations.CreateModel(
            name='LoteCafe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_lote', models.CharField(max_length=50, unique=True)),
                ('fecha_entrega', models.DateTimeField()),
                ('total_quintales', models.IntegerField()),
                ('peso_total_inicial', models.DecimalField(blank=True, decimal_places=2, help_text='Peso total del lote al ingreso en kilogramos', max_digits=10, null=True)),
                ('peso_total_final', models.DecimalField(blank=True, decimal_places=2, help_text='Peso total del lote después de todo el proceso en kilogramos', max_digits=10, null=True)),
                ('observaciones_peso', models.TextField(blank=True, help_text='Observaciones sobre el pesaje inicial')),
                ('fecha_limpieza', models.DateTimeField(blank=True, help_text='Fecha y hora cuando se completó el proceso de limpieza', null=True)),
                ('responsable_limpieza', models.CharField(blank=True, help_text='Nombre del responsable del proceso de limpieza', max_length=200)),
                ('peso_impurezas', models.DecimalField(blank=True, decimal_places=2, help_text='Peso de las impurezas removidas en kilogramos', max_digits=8, null=True)),
                ('impurezas_encontradas', models.CharField(blank=True, help_text='Tipo de impurezas encontradas', max_length=100)),
                ('tipo_limpieza', models.CharField(blank=True, help_text='Método de limpieza aplicado', max_length=100)),
                ('duracion_limpieza', models.IntegerField(blank=True, help_text='Duración del proceso de limpieza en minutos', null=True)),
                ('observaciones_limpieza', models.TextField(blank=True, help_text='Observaciones específicas del proceso de limpieza')),
                ('fecha_separacion', models.DateTimeField(blank=True, help_text='Fecha y hora cuando se completó el proceso de separación', null=True)),
                ('responsable_separacion', models.CharField(blank=True, help_text='Nombre del responsable del proceso de separación', max_length=200)),
                ('calidad_general', models.CharField(blank=True, help_text='Calidad general del café separado', max_length=50)),
                ('duracion_separacion', models.IntegerField(blank=True, help_text='Duración del proceso de separación en minutos', null=True)),
                ('clasificacion_colores', models.JSONField(blank=True, default=dict, help_text='Clasificación detallada por colores del café')),
                ('observaciones_separacion', models.TextField(blank=True, help_text='Observaciones específicas del proceso de separación')),
                ('fecha_recepcion_final', models.DateTimeField(blank=True, help_text='Fecha y hora de recepción final', null=True)),
                ('responsable_recepcion_final', models.CharField(blank=True, help_text='Nombre del responsable de recepción final', max_length=200)),
                ('calificacion_final', models.CharField(blank=True, help_text='Calificación final del lote (A, B, C, D)', max_length=5)),
                ('observaciones_finales', models.TextField(blank=True, help_text='Observaciones finales del proceso completo')),
                ('estado', models.CharField(choices=[('PENDIENTE', 'Pendiente de análisis'), ('EN_PROCESO', 'En proceso de análisis'), ('APROBADO', 'Aprobado - Óptimas condiciones'), ('RECHAZADO', 'Rechazado - Con contaminación'), ('SEPARACION_PENDIENTE', 'Separación Pendiente - Requiere segundo muestreo'), ('SEPARACION_APLICADA', 'Separación Aplicada - Quintales contaminados separados'), ('LIMPIO', 'Limpio - Proceso de limpieza completado'), ('SEPARADO', 'Separado - Proceso de separación por colores completado'), ('FINALIZADO', 'Finalizado - Listo para comercialización')], default='PENDIENTE', max_length=20)),
                ('observaciones', models.TextField(blank=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('usuario_registro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('organizacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.organizacion')),
            ],
            options={
                'verbose_name_plural': 'Lotes de Café',
            },
        ),
        migrations.CreateModel(
            name='Proceso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(help_text='Número único del proceso (ej: Proceso001)', max_length=50, unique=True)),
                ('nombre', models.CharField(help_text='Nombre descriptivo del proceso', max_length=200)),
                ('descripcion', models.TextField(blank=True, help_text='Descripción detallada del proceso')),
                ('estado', models.CharField(choices=[('INICIADO', 'Iniciado'), ('EN_PROCESO', 'En Proceso'), ('PAUSADO', 'Pausado'), ('COMPLETADO', 'Completado'), ('CANCELADO', 'Cancelado')], default='INICIADO', max_length=20)),
                ('fase_actual', models.CharField(choices=[('PILADO', 'Pilado'), ('CLASIFICACION', 'Clasificación'), ('DENSIDAD', 'Densidad'), ('COLOR', 'Color'), ('EMPAQUE', 'Empaque')], default='PILADO', max_length=25)),
                ('progreso', models.IntegerField(default=0, help_text='Progreso del proceso en porcentaje (0-100)')),
                ('fecha_inicio', models.DateTimeField(auto_now_add=True)),
                ('fecha_fin_estimada', models.DateTimeField(blank=True, null=True)),
                ('fecha_fin_real', models.DateTimeField(blank=True, null=True)),
                ('peso_total_inicial', models.DecimalField(blank=True, decimal_places=2, help_text='Peso total inicial en kg', max_digits=12, null=True)),
                ('peso_total_actual', models.DecimalField(blank=True, decimal_places=2, help_text='Peso actual del proceso en kg', max_digits=12, null=True)),
                ('quintales_totales', models.IntegerField(default=0, help_text='Total de quintales en el proceso')),
                ('observaciones', models.TextField(blank=True)),
                ('notas_tecnicas', models.JSONField(blank=True, default=dict, help_text='Notas técnicas de cada fase')),
                ('datos_pilado', models.JSONField(blank=True, default=dict, help_text='Datos detallados del proceso de pilado')),
                ('datos_clasificacion', models.JSONField(blank=True, default=dict, help_text='Datos detallados del proceso de clasificación')),
                ('datos_densidad_1', models.JSONField(blank=True, default=dict, help_text='Datos de la primera parte del proceso de densidad')),
                ('datos_densidad_2', models.JSONField(blank=True, default=dict, help_text='Datos de la segunda parte del proceso de densidad (densimetría 2)')),
                ('datos_color', models.JSONField(blank=True, default=dict, help_text='Datos detallados del proceso de separación por color')),
                ('datos_empaquetado', models.JSONField(blank=True, default=dict, help_text='Datos detallados del proceso de empaquetado')),
                ('activo', models.BooleanField(default=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('lotes', models.ManyToManyField(help_text='Lotes incluidos en este proceso', related_name='procesos_produccion', to='users.lotecafe')),
                ('responsable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='procesos_responsable', to=settings.AUTH_USER_MODEL)),
                ('usuario_creacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='procesos_creados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Proceso de Producción',
                'verbose_name_plural': 'Procesos de Producción',
                'ordering': ['-fecha_inicio'],
            },
        ),
        migrations.CreateModel(
            name='ProcesoAnalisis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_proceso', models.CharField(choices=[('INICIAL', 'Análisis inicial (5 muestras)'), ('SEGUIMIENTO', 'Análisis de seguimiento'), ('LIMPIEZA', 'Proceso de limpieza'), ('SEPARACION', 'Separación por colores')], max_length=20)),
                ('fecha_inicio', models.DateTimeField(auto_now_add=True)),
                ('fecha_finalizacion', models.DateTimeField(blank=True, null=True)),
                ('resultado_general', models.TextField(blank=True)),
                ('aprobado', models.BooleanField(blank=True, null=True)),
                ('lote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='procesos', to='users.lotecafe')),
                ('usuario_proceso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Procesos de Análisis',
            },
        ),
        migrations.CreateModel(
            name='PropietarioCafe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quintales_entregados', models.DecimalField(decimal_places=2, max_digits=8)),
                ('nombre_completo', models.CharField(help_text='Copia del nombre al momento de la entrega', max_length=200)),
                ('cedula', models.CharField(help_text='Copia de la cédula al momento de la entrega', max_length=20)),
                ('telefono', models.CharField(blank=True, help_text='Teléfono al momento de la entrega', max_length=20)),
                ('departamento', models.CharField(blank=True, max_length=100)),
                ('municipio', models.CharField(blank=True, max_length=100)),
                ('comunidad', models.CharField(blank=True, max_length=100)),
                ('calle', models.CharField(blank=True, max_length=200)),
                ('numero_casa', models.CharField(blank=True, max_length=50)),
                ('referencias', models.CharField(blank=True, max_length=300)),
                ('direccion', models.TextField(blank=True)),
                ('lote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='propietarios', to='users.lotecafe')),
                ('propietario_maestro', models.ForeignKey(blank=True, help_text='Referencia al propietario maestro', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='entregas_cafe', to='users.propietariomaestro')),
            ],
            options={
                'verbose_name_plural': 'Propietarios de Café',
                'unique_together': {('lote', 'cedula')},
            },
        ),
        migrations.CreateModel(
            name='MuestraCafe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_muestra', models.CharField(max_length=50)),
                ('fecha_toma_muestra', models.DateTimeField(auto_now_add=True)),
                ('estado', models.CharField(choices=[('PENDIENTE', 'Pendiente de análisis'), ('ANALIZADA', 'Analizada'), ('CONTAMINADA', 'Contaminada'), ('APROBADA', 'Aprobada')], default='PENDIENTE', max_length=20)),
                ('resultado_analisis', models.TextField(blank=True)),
                ('observaciones', models.TextField(blank=True)),
                ('fecha_analisis', models.DateTimeField(blank=True, null=True)),
                ('es_segundo_muestreo', models.BooleanField(default=False)),
                ('analista', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('lote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='muestras', to='users.lotecafe')),
                ('muestra_original', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='muestras_seguimiento', to='users.muestracafe')),
                ('propietario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.propietariocafe')),
            ],
            options={
                'verbose_name_plural': 'Muestras de Café',
                'unique_together': {('lote', 'numero_muestra')},
            },
        ),
        migrations.CreateModel(
            name='RegistroBitacora',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('accion', models.CharField(choices=[('CREAR_LOTE', 'Crear Lote'), ('ACTUALIZAR_LOTE', 'Actualizar Lote'), ('ELIMINAR_LOTE', 'Eliminar Lote'), ('TOMAR_MUESTRA', 'Tomar Muestra'), ('ANALIZAR_MUESTRA', 'Analizar Muestra'), ('ACTUALIZAR_MUESTRA', 'Actualizar Muestra'), ('SEGUNDO_MUESTREO', 'Segundo Muestreo'), ('GENERAR_REPORTE', 'Generar Reporte'), ('EXPORTAR_PDF', 'Exportar PDF'), ('EXPORTAR_CSV', 'Exportar CSV'), ('CONSULTAR_PERSONAL', 'Consultar Personal'), ('LOGIN', 'Inicio de Sesión'), ('LOGOUT', 'Cierre de Sesión'), ('CREAR_ORGANIZACION', 'Crear Organización'), ('ACTUALIZAR_ORGANIZACION', 'Actualizar Organización'), ('INICIAR_PROCESO', 'Iniciar Proceso'), ('FINALIZAR_PROCESO', 'Finalizar Proceso'), ('PROCESAR_LIMPIEZA', 'Procesar Limpieza'), ('SEPARACION_COLORES', 'Separación por Colores'), ('RECEPCION_FINAL', 'Recepción Final'), ('ENVIAR_LIMPIEZA_PARCIAL', 'Enviar Parte Limpia a Limpieza'), ('REGISTRAR_USO_MAQUINARIA', 'Registrar Uso de Maquinaria')], max_length=30)),
                ('modulo', models.CharField(choices=[('RECEPCION', 'Recepción'), ('PROCESOS', 'Procesos'), ('PERSONAL', 'Personal'), ('REPORTES', 'Reportes'), ('SISTEMA', 'Sistema'), ('AUTENTICACION', 'Autenticación'), ('MAQUINARIA', 'Maquinaria')], max_length=20)),
                ('descripcion', models.TextField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('detalles_adicionales', models.JSONField(blank=True, default=dict)),
                ('lote', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.lotecafe')),
                ('muestra', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.muestracafe')),
                ('organizacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.organizacion')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Registros de Bitácora',
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='RegistroDescarga',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad_insumo_usado', models.DecimalField(blank=True, decimal_places=2, help_text='Cantidad del insumo utilizado', max_digits=8, null=True)),
                ('tiempo_uso_insumo', models.IntegerField(blank=True, help_text='Tiempo de uso del insumo en minutos', null=True)),
                ('peso_descargado', models.DecimalField(decimal_places=2, help_text='Peso en kilogramos', max_digits=8)),
                ('hora_inicio', models.DateTimeField(blank=True, help_text='Hora de inicio de la actividad de descarga', null=True)),
                ('hora_fin', models.DateTimeField(blank=True, help_text='Hora de finalización de la actividad de descarga', null=True)),
                ('tiempo_descarga_minutos', models.IntegerField(blank=True, help_text='Duración de la descarga en minutos', null=True)),
                ('fecha_registro', models.DateTimeField(default=django.utils.timezone.now, help_text='Fecha cuando se registró la descarga')),
                ('observaciones', models.TextField(blank=True)),
                ('empleado', models.ForeignKey(help_text='Empleado que realizó la descarga', on_delete=django.db.models.deletion.CASCADE, related_name='mis_descargas', to=settings.AUTH_USER_MODEL)),
                ('insumo', models.ForeignKey(blank=True, help_text='Insumo utilizado en la descarga', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='descargas_realizadas', to='users.insumo')),
                ('lote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='descargas', to='users.lotecafe')),
            ],
            options={
                'verbose_name': 'Registro de Descarga',
                'verbose_name_plural': 'Registros de Descargas',
                'ordering': ['-fecha_registro'],
            },
        ),
        migrations.CreateModel(
            name='RegistroUsoMaquinaria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_maquinaria', models.CharField(blank=True, choices=[('MONTACARGAS', 'Montacargas'), ('GRUA', 'Grúa'), ('BANDA_TRANSPORTADORA', 'Banda Transportadora'), ('CARRETILLA', 'Carretilla'), ('OTRO', 'Otro')], max_length=50, null=True)),
                ('hora_inicio', models.DateTimeField()),
                ('hora_fin', models.DateTimeField()),
                ('tiempo_uso_minutos', models.IntegerField(help_text='Tiempo de uso en minutos')),
                ('peso_total_descargado', models.DecimalField(decimal_places=2, help_text='Peso total descargado con esta maquinaria en kg', max_digits=8)),
                ('observaciones', models.TextField(blank=True)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('empleado', models.ForeignKey(help_text='Empleado que usó la maquinaria', on_delete=django.db.models.deletion.CASCADE, related_name='mis_usos_maquinaria', to=settings.AUTH_USER_MODEL)),
                ('lote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usos_maquinaria', to='users.lotecafe')),
                ('maquinaria', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='registros_uso', to='users.insumo')),
            ],
            options={
                'verbose_name': 'Registro de Uso de Maquinaria',
                'verbose_name_plural': 'Registros de Uso de Maquinaria',
                'ordering': ['-fecha_registro'],
            },
        ),
        migrations.CreateModel(
            name='TareaInsumo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.TextField(help_text='Descripción detallada de la tarea realizada')),
                ('resultado_analisis', models.CharField(blank=True, help_text='Resultado del análisis o tipo de proceso realizado', max_length=50)),
                ('hora_inicio', models.TimeField(blank=True, help_text='Hora de inicio de la tarea', null=True)),
                ('hora_fin', models.TimeField(blank=True, help_text='Hora de finalización de la tarea', null=True)),
                ('tiempo_uso', models.IntegerField(blank=True, help_text='Tiempo de uso del insumo en minutos', null=True)),
                ('cantidad', models.DecimalField(blank=True, decimal_places=2, help_text='Cantidad del insumo utilizado', max_digits=10, null=True)),
                ('peso_usado', models.DecimalField(blank=True, decimal_places=2, help_text='Peso del insumo usado en kg', max_digits=10, null=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('observaciones', models.TextField(blank=True)),
                ('empleado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tareas_realizadas', to=settings.AUTH_USER_MODEL)),
                ('insumo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tareas_uso', to='users.insumo')),
                ('lote', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tareas', to='users.lotecafe')),
                ('muestra', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tareas', to='users.muestracafe')),
            ],
            options={
                'verbose_name': 'Tarea con Insumo',
                'verbose_name_plural': 'Tareas con Insumos',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='TareaProceso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_tarea', models.CharField(choices=[('PILADO_CANTEADO', 'Pilado - Canteado'), ('PILADO_REPOSO', 'Pilado - Tiempo de Reposo'), ('CLASIFICACION_INICIO', 'Clasificación - Inicio'), ('CLASIFICACION_CONTROL', 'Clasificación - Control'), ('DENSIDAD_INICIO', 'Densidad - Inicio'), ('DENSIDAD_CONTROL', 'Densidad - Control'), ('COLOR_INICIO', 'Color - Inicio'), ('COLOR_CONTROL', 'Color - Control'), ('EMPAQUE_PREPARACION', 'Empaque - Preparación'), ('EMPAQUE_PROCESO', 'Empaque - Proceso'), ('OTRO', 'Otra Tarea')], max_length=30)),
                ('descripcion', models.TextField(help_text='Descripción detallada de la tarea')),
                ('fase', models.CharField(choices=[('PILADO', 'Pilado'), ('CLASIFICACION', 'Clasificación'), ('DENSIDAD', 'Densidad'), ('COLOR', 'Color'), ('EMPAQUE', 'Empaque')], max_length=25)),
                ('hora_inicio', models.TimeField(blank=True, null=True)),
                ('hora_fin', models.TimeField(blank=True, null=True)),
                ('duracion_minutos', models.IntegerField(blank=True, null=True)),
                ('peso_impurezas_encontradas', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('peso_impurezas_removidas', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('fecha_ejecucion', models.DateField(blank=True, null=True)),
                ('canteado_realizado', models.BooleanField(default=False)),
                ('tiempo_reposo_interno', models.BooleanField(default=False)),
                ('observaciones', models.TextField(blank=True)),
                ('resultado', models.TextField(blank=True, help_text='Resultado o conclusión de la tarea')),
                ('completada', models.BooleanField(default=False)),
                ('empleado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tareas_proceso', to=settings.AUTH_USER_MODEL)),
                ('proceso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tareas', to='users.proceso')),
            ],
            options={
                'verbose_name': 'Tarea de Proceso',
                'verbose_name_plural': 'Tareas de Procesos',
                'ordering': ['-fecha_registro'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rol', models.CharField(choices=[('EMPLEADO', 'Empleado'), ('ADMINISTRADOR', 'Administrador'), ('SECRETARIA', 'Secretaria')], default='EMPLEADO', max_length=20)),
                ('telefono', models.CharField(blank=True, max_length=20)),
                ('cedula', models.CharField(blank=True, max_length=20)),
                ('departamento', models.CharField(blank=True, max_length=100)),
                ('fecha_ingreso', models.DateField(blank=True, null=True)),
                ('activo', models.BooleanField(default=True)),
                ('foto_perfil', models.CharField(blank=True, max_length=500)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Perfiles de Usuario',
            },
        ),
    ]
